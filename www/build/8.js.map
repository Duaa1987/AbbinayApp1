{"version":3,"sources":["../../src/pages/multiplecancer/multiplecancer.module.ts","../../src/pages/multiplecancer/multiplecancer.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MultiplecancerPage } from './multiplecancer';\n\n@NgModule({\n  declarations: [\n    MultiplecancerPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MultiplecancerPage),\n  ],\n})\nexport class MultiplecancerPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/multiplecancer/multiplecancer.module.ts","import { Component, OnChanges } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the MultiplecancerPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-multiplecancer',\n  templateUrl: 'multiplecancer.html',\n})\nexport class MultiplecancerPage implements OnChanges {\n  total;\n  Pollutant2;\n  Concentration = [];\n  tables = 0\n  tableDis = \"false\";\n  res = [];\n  final = [];\n  number_of_values;\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad MultiplecancerPage');\n  }\n  ngOnChanges() {\n    console.log(\"changes done\");\n  }\n\n\n  getTableVlaues() {\n    console.log(\"this is triggered\");\n    this.number_of_values = Object.keys(this.Pollutant2).length;\n    console.log(this.Pollutant2);\n\n    // You can also build this.res like this instead of the loop below:\n    //this.res = Object.keys(this.Pollutant2);                <-------------- Alternate Method\n\n    // Initialize 'res' to empty array.\n    //<--------------- Initialize res to empty array\n\n    this.res = [];\n    for (let i = 0; i < this.number_of_values; i++) {\n\n      // Check if the element exists before adding to this.res.\n      if (this.res.indexOf(i) == -1) {\n        this.res.push(i);\n      }\n      console.log(this.res);\n    }\n    //this.final=[[res:this.res,values:this.Pollutant2;\n  }\n\n  calculate() {\n    console.log(\"total is:\" + this.Pollutant2);\n    this.tables = 4;\n    this.tableDis = \"true\";\n    console.log(\"concentrationis\" + this.Concentration);\n    let sum = 0;\n    for (let i = 0; i < this.number_of_values; i++) {\n\n      //  Convert value to float before muliplication. <----- Added parseFloat\n\n      this.final[i] = parseFloat(this.Concentration[i]) * parseFloat(this.Pollutant2[i]);\n      sum = sum + this.final[i];\n      console.log(\"Final result \" + this.final)\n    }\n\n    // Sum will have the result of summation of checked*user_input\n    console.log(\"Sum of (checked*user_input):\" + sum);\n    this.total=sum*1000000;;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/multiplecancer/multiplecancer.ts"],"sourceRoot":""}